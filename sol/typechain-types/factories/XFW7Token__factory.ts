/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XFW7Token, XFW7TokenInterface } from "../XFW7Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
    ],
    name: "gatewayUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610140523480156200003757600080fd5b50604051806040016040528060098152602001682c232b9baa37b5b2b760b91b81525080604051806040016040528060018152602001603160f81b815250604051806040016040528060098152602001682c232b9baa37b5b2b760b91b815250604051806040016040528060048152602001635846573760e01b8152508160039080519060200190620000cc929190620001ed565b508051620000e2906004906020840190620001ed565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060601b60c05261012052506200019193506200018b925050620001979050565b6200019b565b620002d0565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001fb9062000293565b90600052602060002090601f0160209004810192826200021f57600085556200026a565b82601f106200023a57805160ff19168380011785556200026a565b828001600101855582156200026a579182015b828111156200026a5782518255916020019190600101906200024d565b50620002789291506200027c565b5090565b5b808211156200027857600081556001016200027d565b600181811c90821680620002a857607f821691505b60208210811415620002ca57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160601c60e0516101005161012051610140516115c76200032e60003960006106dc01526000610c9301526000610ce201526000610cbd01526000610c1601526000610c4001526000610c6a01526115c76000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b41146102a5578063a457c2d7146102ad578063a9059cbb146102c0578063d505accf146102d3578063dd62ed3e146102e6578063f2fde38b1461031f57600080fd5b806370a082311461023d578063715018a61461026657806379cc67901461026e5780637ecebe00146102815780638da5cb5b1461029457600080fd5b806323b872dd1161010a57806323b872dd146101da578063313ce567146101ed5780633644e515146101fc578063395093511461020457806342966c6814610217578063449a52f81461022a57600080fd5b806306fdde0314610147578063095ea7b3146101655780630a0f4def14610188578063116191b61461019d57806318160ddd146101c8575b600080fd5b61014f610332565b60405161015c919061148f565b60405180910390f35b61017861017336600461144e565b6103c4565b604051901515815260200161015c565b61019b61019636600461134f565b6103dc565b005b6007546101b0906001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b6002545b60405190815260200161015c565b6101786101e83660046113a2565b610487565b6040516012815260200161015c565b6101cc6104ab565b61017861021236600461144e565b6104ba565b61019b610225366004611477565b6104f9565b61019b61023836600461144e565b610506565b6101cc61024b36600461134f565b6001600160a01b031660009081526020819052604090205490565b61019b61056e565b61019b61027c36600461144e565b6105a4565b6101cc61028f36600461134f565b6105b9565b6006546001600160a01b03166101b0565b61014f6105d9565b6101786102bb36600461144e565b6105e8565b6101786102ce36600461144e565b61067a565b61019b6102e13660046113dd565b610688565b6101cc6102f4366004611370565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61019b61032d36600461134f565b6107ec565b60606003805461034190611546565b80601f016020809104026020016040519081016040528092919081815260200182805461036d90611546565b80156103ba5780601f1061038f576101008083540402835291602001916103ba565b820191906000526020600020905b81548152906001019060200180831161039d57829003601f168201915b5050505050905090565b6000336103d2818585610884565b5060019392505050565b6006546001600160a01b0316331461040f5760405162461bcd60e51b8152600401610406906114e2565b60405180910390fd5b6001600160a01b0381166104655760405162461bcd60e51b815260206004820152601860248201527f446f6e2774206162616e646f6e207468652062726964676500000000000000006044820152606401610406565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000336104958582856109a9565b6104a0858585610a3b565b506001949350505050565b60006104b5610c09565b905090565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103d290829086906104f4908790611517565b610884565b6105033382610d30565b50565b6007546001600160a01b031633146105605760405162461bcd60e51b815260206004820152601760248201527f4f6e6c79206272696467652063616e20657865637574650000000000000000006044820152606401610406565b61056a8282610e76565b5050565b6006546001600160a01b031633146105985760405162461bcd60e51b8152600401610406906114e2565b6105a26000610f55565b565b6105af8233836109a9565b61056a8282610d30565b6001600160a01b0381166000908152600560205260408120545b92915050565b60606004805461034190611546565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561066d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610406565b6104a08286868403610884565b6000336103d2818585610a3b565b834211156106d85760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610406565b60007f00000000000000000000000000000000000000000000000000000000000000008888886107078c610fa7565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061076282610fcf565b905060006107728287878761101d565b9050896001600160a01b0316816001600160a01b0316146107d55760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610406565b6107e08a8a8a610884565b50505050505050505050565b6006546001600160a01b031633146108165760405162461bcd60e51b8152600401610406906114e2565b6001600160a01b03811661087b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610406565b61050381610f55565b6001600160a01b0383166108e65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610406565b6001600160a01b0382166109475760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610406565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610a355781811015610a285760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610406565b610a358484848403610884565b50505050565b6001600160a01b038316610a9f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610406565b6001600160a01b038216610b015760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610406565b6001600160a01b03831660009081526020819052604090205481811015610b795760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610406565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610bb0908490611517565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bfc91815260200190565b60405180910390a3610a35565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610c6257507f000000000000000000000000000000000000000000000000000000000000000046145b15610c8c57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038216610d905760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610406565b6001600160a01b03821660009081526020819052604090205481811015610e045760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610406565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610e3390849061152f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161099c565b6001600160a01b038216610ecc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610406565b8060026000828254610ede9190611517565b90915550506001600160a01b03821660009081526020819052604081208054839290610f0b908490611517565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105d3610fdc610c09565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061102e87878787611045565b9150915061103b81611132565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561107c5750600090506003611129565b8460ff16601b1415801561109457508460ff16601c14155b156110a55750600090506004611129565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156110f9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661112257600060019250925050611129565b9150600090505b94509492505050565b600081600481111561115457634e487b7160e01b600052602160045260246000fd5b141561115d5750565b600181600481111561117f57634e487b7160e01b600052602160045260246000fd5b14156111cd5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610406565b60028160048111156111ef57634e487b7160e01b600052602160045260246000fd5b141561123d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610406565b600381600481111561125f57634e487b7160e01b600052602160045260246000fd5b14156112b85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610406565b60048160048111156112da57634e487b7160e01b600052602160045260246000fd5b14156105035760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610406565b80356001600160a01b038116811461134a57600080fd5b919050565b600060208284031215611360578081fd5b61136982611333565b9392505050565b60008060408385031215611382578081fd5b61138b83611333565b915061139960208401611333565b90509250929050565b6000806000606084860312156113b6578081fd5b6113bf84611333565b92506113cd60208501611333565b9150604084013590509250925092565b600080600080600080600060e0888a0312156113f7578283fd5b61140088611333565b965061140e60208901611333565b95506040880135945060608801359350608088013560ff81168114611431578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611460578182fd5b61146983611333565b946020939093013593505050565b600060208284031215611488578081fd5b5035919050565b6000602080835283518082850152825b818110156114bb5785810183015185820160400152820161149f565b818111156114cc5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561152a5761152a61157b565b500190565b6000828210156115415761154161157b565b500390565b600181811c9082168061155a57607f821691505b60208210811415610fc957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fdfea26469706673582212207e229ad2130675409d4fea3739a08edd166845899ba81ae420b671b49f8bfc1a64736f6c63430008040033";

type XFW7TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XFW7TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XFW7Token__factory extends ContractFactory {
  constructor(...args: XFW7TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "XFW7Token";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XFW7Token> {
    return super.deploy(overrides || {}) as Promise<XFW7Token>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): XFW7Token {
    return super.attach(address) as XFW7Token;
  }
  connect(signer: Signer): XFW7Token__factory {
    return super.connect(signer) as XFW7Token__factory;
  }
  static readonly contractName: "XFW7Token";
  public readonly contractName: "XFW7Token";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XFW7TokenInterface {
    return new utils.Interface(_abi) as XFW7TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XFW7Token {
    return new Contract(address, _abi, signerOrProvider) as XFW7Token;
  }
}
