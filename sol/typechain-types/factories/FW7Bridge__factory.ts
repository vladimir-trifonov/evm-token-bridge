/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FW7Bridge, FW7BridgeInterface } from "../FW7Bridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "ClaimTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "DepositTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "ReturnTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "mainDepositHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensBridged",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "bridget",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
    ],
    name: "gatewayUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "returnTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_requester",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_sideDepositHash",
        type: "bytes32",
      },
    ],
    name: "tokensBridged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e5a380380610e5a83398101604081905261002f916100da565b818161003a3361006e565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790555061010c9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d557600080fd5b919050565b600080604083850312156100ec578182fd5b6100f5836100be565b9150610103602084016100be565b90509250929050565b610d3f8061011b6000396000f3fe6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b14610236578063cf30901214610254578063dd49756e1461026a578063f2fde38b1461028a578063f9718fc8146102aa578063fc0c546a146102bf576100f6565b80630a0f4def14610137578063116191b614610159578063147e78b414610196578063387129e9146101c657806348c54b9d1461020c578063715018a614610221576100f6565b366100f65760405162461bcd60e51b81526020600482015260166024820152752237b713ba1030b1b1b2b83a1030b73c9022ba3432b960511b60448201526064015b60405180910390fd5b60405162461bcd60e51b81526020600482015260166024820152752237b713ba1030b1b1b2b83a1030b73c9022ba3432b960511b60448201526064016100ed565b34801561014357600080fd5b50610157610152366004610ae4565b6102df565b005b34801561016557600080fd5b50600254610179906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a257600080fd5b506101b66101b1366004610b05565b610379565b604051901515815260200161018d565b3480156101d257600080fd5b506101fe6101e1366004610b57565b805160208183018101805160038252928201919093012091525481565b60405190815260200161018d565b34801561021857600080fd5b506101b66104f3565b34801561022d57600080fd5b5061015761074d565b34801561024257600080fd5b506000546001600160a01b0316610179565b34801561026057600080fd5b506101fe60045481565b34801561027657600080fd5b506101b6610285366004610c01565b610783565b34801561029657600080fd5b506101576102a5366004610ae4565b610933565b3480156102b657600080fd5b506101b66109ce565b3480156102cb57600080fd5b50600154610179906001600160a01b031681565b6000546001600160a01b031633146103095760405162461bcd60e51b81526004016100ed90610c79565b6001600160a01b0381166103575760405162461bcd60e51b8152602060048201526015602482015274446f6e2774206275726e207468652062726964676560581b60448201526064016100ed565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546000906001600160a01b031633146103d65760405162461bcd60e51b815260206004820152601760248201527f4f6e6c79206272696467652063616e206578656375746500000000000000000060448201526064016100ed565b6001546040516000916103f79133916001600160a01b031690602001610c19565b6040516020818303038152906040529050836003826040516104199190610c40565b908152602001604051809103902060008282546104369190610cae565b925050819055508360038260405161044e9190610c40565b90815260200160405180910390205410156104a45760405162461bcd60e51b8152602060048201526016602482015275546f74616c2062726964676574206f766572666c6f7760501b60448201526064016100ed565b82856001600160a01b03167f6a8f2c4e73de5c9b42de06282d794653733ff7ac43f109c3dd3c9bd84152f95d866040516104e091815260200190565b60405180910390a3506001949350505050565b60015460405160009182916105189133916001600160a01b0390911690602001610c19565b6040516020818303038152906040529050600060038260405161053b9190610c40565b908152602001604051809103902054905060038260405161055c9190610c40565b90815260200160405180910390205481116105b95760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74206272696467656420746f6b656e73000000000060448201526064016100ed565b6003826040516105c99190610c40565b908152602001604051809103902060009055600454811161062c5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74206c6f636b656420746f6b656e7300000000000060448201526064016100ed565b806004600082825461063e9190610cc6565b90915550506001546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561069557600080fd5b505af11580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190610b37565b61070e5760405162461bcd60e51b81526020600482015260126024820152712330b4b632b2103a37903a3930b739b332b960711b60448201526064016100ed565b60405181815233907f4d7f917f6b905f28ba5297e6c224a6cfec20ac6a3698a55b412d30b95ad25d2f906020015b60405180910390a260019250505090565b6000546001600160a01b031633146107775760405162461bcd60e51b81526004016100ed90610c79565b6107816000610a78565b565b60008082116107ca5760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e7420746f6b656e7360681b60448201526064016100ed565b81600460008282546107dc9190610cae565b909155505060045482111561082b5760405162461bcd60e51b8152602060048201526015602482015274546f74616c206c6f636b6564206f766572666c6f7760581b60448201526064016100ed565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561087d57600080fd5b505af1158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b59190610b37565b6108f65760405162461bcd60e51b81526020600482015260126024820152712330b4b632b2103a37903a3930b739b332b960711b60448201526064016100ed565b60405182815233907fe3a6e26dceff30d982e183d0ce051fb5b791f2108785a9d440d417247cef5b419060200160405180910390a2506001919050565b6000546001600160a01b0316331461095d5760405162461bcd60e51b81526004016100ed90610c79565b6001600160a01b0381166109c25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ed565b6109cb81610a78565b50565b60015460405160009182916109f39133916001600160a01b0390911690602001610c19565b60405160208183030381529060405290506000600382604051610a169190610c40565b9081526020016040518091039020549050600382604051610a379190610c40565b908152604051602091819003820181206000905582815233917fffd5f5f77727ae455ee2a18b7d41acbc31e2743ce9087e9b99f5e3630cb21de0910161073c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610adf57600080fd5b919050565b600060208284031215610af5578081fd5b610afe82610ac8565b9392505050565b600080600060608486031215610b19578182fd5b610b2284610ac8565b95602085013595506040909401359392505050565b600060208284031215610b48578081fd5b81518015158114610afe578182fd5b600060208284031215610b68578081fd5b813567ffffffffffffffff80821115610b7f578283fd5b818401915084601f830112610b92578283fd5b813581811115610ba457610ba4610cf3565b604051601f8201601f19908116603f01168101908382118183101715610bcc57610bcc610cf3565b81604052828152876020848701011115610be4578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215610c12578081fd5b5035919050565b6bffffffffffffffffffffffff19606093841b811682529190921b16601482015260280190565b60008251815b81811015610c605760208186018101518583015201610c46565b81811115610c6e5782828501525b509190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610cc157610cc1610cdd565b500190565b600082821015610cd857610cd8610cdd565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f11bedb248a577f9b0e6a47ac94be65b13f6db25edb95ee679ee9d071f58eb6064736f6c63430008040033";

type FW7BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FW7BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FW7Bridge__factory extends ContractFactory {
  constructor(...args: FW7BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FW7Bridge";
  }

  deploy(
    _token: string,
    _gateway: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FW7Bridge> {
    return super.deploy(
      _token,
      _gateway,
      overrides || {}
    ) as Promise<FW7Bridge>;
  }
  getDeployTransaction(
    _token: string,
    _gateway: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _gateway, overrides || {});
  }
  attach(address: string): FW7Bridge {
    return super.attach(address) as FW7Bridge;
  }
  connect(signer: Signer): FW7Bridge__factory {
    return super.connect(signer) as FW7Bridge__factory;
  }
  static readonly contractName: "FW7Bridge";
  public readonly contractName: "FW7Bridge";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FW7BridgeInterface {
    return new utils.Interface(_abi) as FW7BridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FW7Bridge {
    return new Contract(address, _abi, signerOrProvider) as FW7Bridge;
  }
}
